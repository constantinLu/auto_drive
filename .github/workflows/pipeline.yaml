name: Flutter CI/CD

on:
  push:
    branches: [ master ] # or whichever branch you want to trigger the deployment

jobs:
  #VERSIONING OF BRANCHES
  version:
    name: Create version number
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Fetch all history for all tags and branches
        run: |
          git config remote.origin.url https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git fetch --prune --depth=10000

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: "5.x"

      - name: Use GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7

      - name: Create version.txt with nuGetVersion
        run: echo ${{ steps.gitversion.outputs.nuGetVersion  }} > version.txt

      - name: Upload version.txt
        uses: actions/upload-artifact@v2
        with:
          name: gitversion
          path: version.txt

  # ACTUAL BUILD
  build:
    name: Build APK and Create release
    needs: [ version ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Get version.txt
        uses: actions/download-artifact@v2
        with:
          name: gitversion

      - name: Create new file without newline char from version.txt
        run: tr -d '\n' < version.txt > version1.txt

      - name: Read version
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: version1.txt

      - name: Update version in YAML
        run: sed -i 's/99.99.99+99/${{ steps.version.outputs.content }}+${{ github.run_number}} + 14))/g' pubspec.yaml
        #run: sed -i 's/99.99.99+99/${{ steps.version.outputs.content }}/g' pubspec.yaml

      #the secrets.KEYSTORE_PATH is from github-repo
      - name: Decode Keystore
        run: echo "${{ secrets.KEYSTORE_PATH }}" | base64 -d > ./autodrive-prod.keystore

      - name: Create /home/app directory
        run: sudo mkdir -p /home/app

      - name: Move Keystore to /home/app
        run: sudo mv ./autodrive-prod.keystore /home/app/

      - name: Set keystore permissions
        run: sudo chmod 644 /home/app/autodrive-prod.keystore

      - name: List files to check keystore
        run: ls -la

      - name: Set up Keystore Environment
        run: |
          echo "KEYSTORE_PATH=/home/app/autodrive-prod.keystore" >> $GITHUB_ENV
          echo "KEYSTORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}" >> $GITHUB_ENV
          echo "KEY_ALIAS=${{ secrets.KEY_ALIAS }}" >> $GITHUB_ENV
          echo "KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}" >> $GITHUB_ENV

      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - run: flutter clean
      - run: flutter pub get
      - name: Generate freezed classes
        run: dart run build_runner build --delete-conflicting-outputs
      #- run: flutter build apk --release --split-per-abi
      - name: Debug path step
        run: |
          echo $KEYSTORE_PATH
          echo $KEYSTORE_PASSWORD
          echo $KEY_ALIAS
          echo $KEY_PASSWORD

      - run: flutter build appbundle --release --no-tree-shake-icons

      - name: Create a Release in GitHub
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/bundle/release/app-release.aab"
          #artifacts: "build/app/outputs/apk/release/*.apk,build/app/outputs/bundle/release/app-release.aab"
          token: ${{ secrets.GH_TOKEN }}
          tag: ${{ steps.version.outputs.content }}
          commit: ${{ github.sha }}

      - name: Upload app bundle
        uses: actions/upload-artifact@v2
        with:
          name: appbundle
          path: build/app/outputs/bundle/release/app-release.aab

  #RELEASE
  release:
    name: Release app to internal track
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Get appbundle from artifacts
        uses: actions/download-artifact@v2
        with:
          name: appbundle

      - name: Release app to internal track
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAY_STORE_SERVICE_ACCOUNT_JSON }}
          packageName: com.devsite.auto_drive
          releaseFiles: app-release.aab
          track: alpha
          status: completed