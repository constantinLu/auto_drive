#name: Deploy to Play Store
#
#on:
#  push:
#    branches:
#      - master  # or whichever branch you want to trigger the deployment
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v2
#
#      - name: Setup Flutter
#        uses: subosito/flutter-action@v2
#        with:
#          channel: "stable"
#          flutter-version: "3.13.4"
#
#      - name: Install dependencies
#        run: flutter pub get
#
#      - name: Decode Keystore
#        run: echo "${{ secrets.ENCODED_KEYSTORE }}" | base64 -d > ./autodrive-prod.keystore
#
#      - name: Generate freezed classes
#        run: dart run build_runner build --delete-conflicting-outputs
#
#      - name: List files to check keystore
#        run: ls -la
#
#      - name: Set up Keystore Environment
#        run: |
#          echo "KEYSTORE_PATH=./autodrive-prod.keystore" >> $GITHUB_ENV
#          echo "KEYSTORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}" >> $GITHUB_ENV
#          echo "KEY_ALIAS=${{ secrets.KEY_ALIAS }}" >> $GITHUB_ENV
#          echo "KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}" >> $GITHUB_ENV
#
#      - name: Sign and Build AAB
#        run: flutter build appbundle --release --no-tree-shake-icons
#
#      - name: Deploy to Play Store
#        uses: r0adkll/upload-google-play@v1
#        with:
#          serviceAccountJsonPlainText: ${{ secrets.PLAY_STORE_SERVICE_ACCOUNT_JSON }}
#          packageName: com.devsite.auto_drive
#          #releaseFiles: build/app/outputs/flutter-apk/app-release.apk
#          releaseFiles: build/app/outputs/bundle/release/app-release.aab
#

#          track: alpha  # or alpha, beta, internal
